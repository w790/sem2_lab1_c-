name: C++ build and release # Название нашего процесса

on:
  push: #При любом пуше (заливке кода) в репозиторий
    branches:
        - main #Запускаться только если пушим в ветку main

jobs:
  build-ubuntu: 
    runs-on: ubuntu-latest #ОС: последняя Ubuntu
    steps: 
       - uses: actions/checkout@v4 # 1 Клонируем наш код
       - run: |
           rm -rf ${{github.workspace}}/build
           mkdir -p ${{github.workspace}}/build
       - run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release -DPROJECT_VERSION="1.0.${{ github.run_number }}"
       - run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=Release # 2 Настраиваем CMake
       - run: cmake --build ${{github.workspace}}/build --config Release # 3 Собираем проект
       - uses: actions/upload-artifact@v4 # 4 Сохраняем результат сборки
         with:
          name: hello-world-ubuntu
          path: ${{github.workspace}}/build/hello_world

  build-windows:
    runs-on: windows-latest 
    steps:
       - uses: actions/checkout@v4
       - run: |
           Remove-Item -Recurse -Force ${{github.workspace}}/build -ErrorAction SilentlyContinue
           New-Item -ItemType Directory -Path ${{github.workspace}}/build -Force
       - run: cmake -B ${{github.workspace}}/build -DPROJECT_VERSION="1.0.${{ github.run_number }}"
       - run: cmake -B ${{github.workspace}}/build
       - run: cmake --build ${{github.workspace}}/build --config Release
       - uses: actions/upload-artifact@v4
         with:
          name: hello-world-windows
          path: ${{github.workspace}}/build/Release/hello_world.exe

  create-release: #Создание релиза
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-windows] #ждем, пока обе сборки успешно завершатся
    # Делаем релиз только с ветки main
    if: github.ref == 'refs/heads/main' 
    
    permissions:
      contents: write

    steps:
      - name: Download all artifacts #Скачиваем все собранные артефакты
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts  #Скачиваем все артефакты в папку ./artifacts

      - name: List files #Посмотрим, что скачалось (для отладки)
        run: ls -R ./artifacts

      - name: Create Release #Создаем релиз на GitHub
        uses: softprops/action-gh-release@v1
        with:
          files: | #перечисляем файлы, которые надо добавить в релиз
            ./artifacts/hello-world-ubuntu/hello_world
            ./artifacts/hello-world-windows/hello_world.exe
          tag_name: v1.0.${{ github.run_number }} 
          name: Release v1.0.${{ github.run_number }}
          body: Автоматический релиз сборки №${{ github.run_number }}