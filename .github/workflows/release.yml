name: C++ build and release

on:
  push:
    branches:
      - main

jobs:
  build-ubuntu: 
    runs-on: ubuntu-latest
    steps: 
      - uses: actions/checkout@v4
      
      - name: Clean build directory
        run: |
          rm -rf build
          mkdir -p build
          
      - name: Configure CMake with version
        run: |
          echo "Setting version to: 1.0.${{ github.run_number }}"
          cmake -B build -DCMAKE_BUILD_TYPE=Release -DCMAKE_PROJECT_VERSION="1.0.${{ github.run_number }}"
          
      - name: Build project
        run: cmake --build build --config Release
        
      - name: Verify version in binary
        run: |
          echo "=== Checking binary version ==="
          ./build/hello_world || echo "Running binary to check version"
          strings build/hello_world | grep -i "1.0" | head -5
          
      - uses: actions/upload-artifact@v4
        with:
          name: hello-world-ubuntu
          path: build/hello_world

  build-windows:
    runs-on: windows-latest 
    steps:
      - uses: actions/checkout@v4
      
      - name: Update version in source code (Windows)
        run: |
          $version = "1.0.${{ github.run_number }}"
          $content = Get-Content -Path func.cpp -Raw
          $newContent = $content -replace 'return "1.0\.\d+"', "return `"$version`""
          Set-Content -Path func.cpp -Value $newContent
          echo "Updated func.cpp with version: $version"
          
      - name: Clean build directory
        run: |
          Remove-Item -Recurse -Force build -ErrorAction SilentlyContinue
          New-Item -ItemType Directory -Path build -Force
          
      - name: Configure CMake
        run: cmake -B build
          
      - name: Build project
        run: cmake --build build --config Release
        
      - name: Verify version in binary
        run: |
          echo "=== Checking binary version ==="
          .\build\Release\hello_world.exe || echo "Running binary to check version"
          strings .\build\Release\hello_world.exe | findstr "1.0" | head -5
          
      - uses: actions/upload-artifact@v4
        with:
          name: hello-world-windows
          path: build/Release/hello_world.exe

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-windows]
    if: github.ref == 'refs/heads/main' 
    
    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
          
      - name: Verify final versions
        run: |
          echo "=== Ubuntu binary version ==="
          strings ./artifacts/hello-world-ubuntu/hello_world | grep -i "1.0" | head -3
          echo "=== Windows binary version ==="
          strings ./artifacts/hello-world-windows/hello_world.exe | grep -i "1.0" | head -3
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./artifacts/hello-world-ubuntu/hello_world
            ./artifacts/hello-world-windows/hello_world.exe
          tag_name: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          body: |
            Автоматический релиз сборки №${{ github.run_number }}
            
            ### Что включено:
            - hello_world (Linux) - версия 1.0.${{ github.run_number }}
            - hello_world.exe (Windows) - версия 1.0.${{ github.run_number }}